<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Golang on HaoKunT的博客</title>
    <link>http://haokunt.github.io/categories/golang/</link>
    <description>Recent content in Golang on HaoKunT的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Fri, 26 Jul 2019 06:13:00 +0800</lastBuildDate>
    
	<atom:link href="http://haokunt.github.io/categories/golang/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>SWIG编译海康威视SDK 使用golang</title>
      <link>http://haokunt.github.io/2019/07/26/swig%E7%BC%96%E8%AF%91%E6%B5%B7%E5%BA%B7%E5%A8%81%E8%A7%86sdk-%E4%BD%BF%E7%94%A8golang/</link>
      <pubDate>Fri, 26 Jul 2019 06:13:00 +0800</pubDate>
      
      <guid>http://haokunt.github.io/2019/07/26/swig%E7%BC%96%E8%AF%91%E6%B5%B7%E5%BA%B7%E5%A8%81%E8%A7%86sdk-%E4%BD%BF%E7%94%A8golang/</guid>
      <description>吐槽的话 先允许我吐槽一下海康威视的SDK有多难用SWIG编译
编译过程 准备工作 先声明我编译的是linux版本的，环境是ubuntu 18.04，还没有开始做开发，但是编译的过程没有报错
 Tips:
windows的也尝试了(win10)，没有问题</description>
    </item>
    
    <item>
      <title>Golang的小技巧</title>
      <link>http://haokunt.github.io/2019/07/26/golang%E7%9A%84%E5%B0%8F%E6%8A%80%E5%B7%A7/</link>
      <pubDate>Fri, 26 Jul 2019 03:12:44 +0800</pubDate>
      
      <guid>http://haokunt.github.io/2019/07/26/golang%E7%9A%84%E5%B0%8F%E6%8A%80%E5%B7%A7/</guid>
      <description>go命令行参数 编译 go build 是最简单的编译命令，对于一个包，这个命令只会做检查，即检查包是否有编译错误，对于main则会生成一个可执行文件.
   参数 参数含义     -o 指定输出的可执行文件名称   -x 输出详细信息，包含编译时的每一步骤    cgo cgo是go语言对于和C语言混合编程所给出的官方解决方案，用C包解决，对于使用了cgo的包来说，其编译可以有额外的参数</description>
    </item>
    
  </channel>
</rss>